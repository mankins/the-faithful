steps:
  - id: "cloud functions install"
    name: 'gcr.io/cloud-builders/npm'
    args: ['install']
    waitFor: ['-']
    dir: 'functions'

  - id: "cloud functions deploy - slackRelay"
    name: 'gcr.io/cloud-builders/gcloud'
    args: ['functions', 'deploy', 'slackRelay', '--source=.', '--trigger-http', '--runtime', 'nodejs14', '--entry-point=slackRelay', '--allow-unauthenticated', '--region', "${_REGION}", '--memory=256']
    waitFor: ["cloud functions install"]
    dir: 'functions'
    
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    waitFor: ['-']
    args: ["build", "-t", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}", "."]

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    waitFor: ['build image']
    args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"]

  - id: "deploy prod service"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "deploy",
        "${_SERVICE_NAME}",
        "--platform",
        "managed",
        "--region",
        "${_REGION}",
        "--allow-unauthenticated",
        "--image",
        "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}",
      ]

  # Force the new revision to serve 100% of traffic.
  - id: "ensure prod service live"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "services",
        "update-traffic",
        "${_SERVICE_NAME}",
        "--to-latest",
        "--platform",
        "managed",
        "--region",
        "${_REGION}",
      ]

substitutions:
  _SERVICE_NAME: the-faithful-ssr
  _REGION: us-central1
